# This is a basic workflow to help you get started with Actions

name: Migration Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: jitterbit/get-changed-files@v1
        id: get-changes
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Fetch the Branch Name 
        run: echo ${{ github.event.pull_request.head.ref }}
        
      - name: Declare Environment Variable 1
        run: echo "IS_BRANCH_NAME_LEGAL=false" >> $GITHUB_ENV

      - name: Declare Environment Variable 2
        run: echo "MIGRATION_CODE_HAS_OTHER_CHANGES=false" >> $GITHUB_ENV
        
      - name: Check Branch for Migration Changes
        run: |
          env
          for filename in ${{ steps.get-changes.outputs.added_modified }}; do
            echo "IS_BRANCH_NAME_LEGAL=$(( startsWith($filename, "db/") ? true : false ))" >> $GITHUB_ENV          
          done
        
      - name: Check If Branch Name is Legal
        uses: actions/github-script@v3
        if: contains(steps.get-changes.outputs.added_modified, 'db/') && contains( github.event.pull_request.head.ref, 'db_migrate' ) != 'true'
        with:
          script: |
            core.setFailed('Illegal Branch Name. Please start the branch name with db_migrate')
